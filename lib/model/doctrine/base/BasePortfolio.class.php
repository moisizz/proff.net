<?php

/**
 * BasePortfolio
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $room_id
 * @property string $name
 * @property string $description
 * @property float $price
 * @property string $image
 * @property date $date
 * @property Room $Room
 * @property Doctrine_Collection $Furniture
 * @property Doctrine_Collection $FurniturePortfolio
 * @property Doctrine_Collection $PortfolioPreorder
 * @property Doctrine_Collection $Preorder
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method integer             getRoomId()             Returns the current record's "room_id" value
 * @method string              getName()               Returns the current record's "name" value
 * @method string              getDescription()        Returns the current record's "description" value
 * @method float               getPrice()              Returns the current record's "price" value
 * @method string              getImage()              Returns the current record's "image" value
 * @method date                getDate()               Returns the current record's "date" value
 * @method Room                getRoom()               Returns the current record's "Room" value
 * @method Doctrine_Collection getFurniture()          Returns the current record's "Furniture" collection
 * @method Doctrine_Collection getFurniturePortfolio() Returns the current record's "FurniturePortfolio" collection
 * @method Doctrine_Collection getPortfolioPreorder()  Returns the current record's "PortfolioPreorder" collection
 * @method Doctrine_Collection getPreorder()           Returns the current record's "Preorder" collection
 * @method Portfolio           setId()                 Sets the current record's "id" value
 * @method Portfolio           setRoomId()             Sets the current record's "room_id" value
 * @method Portfolio           setName()               Sets the current record's "name" value
 * @method Portfolio           setDescription()        Sets the current record's "description" value
 * @method Portfolio           setPrice()              Sets the current record's "price" value
 * @method Portfolio           setImage()              Sets the current record's "image" value
 * @method Portfolio           setDate()               Sets the current record's "date" value
 * @method Portfolio           setRoom()               Sets the current record's "Room" value
 * @method Portfolio           setFurniture()          Sets the current record's "Furniture" collection
 * @method Portfolio           setFurniturePortfolio() Sets the current record's "FurniturePortfolio" collection
 * @method Portfolio           setPortfolioPreorder()  Sets the current record's "PortfolioPreorder" collection
 * @method Portfolio           setPreorder()           Sets the current record's "Preorder" collection
 * 
 * @package    proff.dev
 * @subpackage model
 * @author     Лесникова Екатерина
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePortfolio extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('portfolio');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('room_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 511, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 511,
             ));
        $this->hasColumn('description', 'string', 2047, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 2047,
             ));
        $this->hasColumn('price', 'float', null, array(
             'type' => 'float',
             'notnull' => false,
             ));
        $this->hasColumn('image', 'string', 511, array(
             'type' => 'string',
             'notnull' => false,
             'default' => 'default_portfolio.png',
             'length' => 511,
             ));
        $this->hasColumn('date', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Room', array(
             'local' => 'room_id',
             'foreign' => 'id'));

        $this->hasMany('Furniture', array(
             'refClass' => 'FurniturePortfolio',
             'local' => 'portfolio_id',
             'foreign' => 'furniture_id'));

        $this->hasMany('FurniturePortfolio', array(
             'local' => 'id',
             'foreign' => 'portfolio_id'));

        $this->hasMany('PortfolioPreorder', array(
             'local' => 'id',
             'foreign' => 'portfolio_id'));

        $this->hasMany('Preorder', array(
             'refClass' => 'PortfolioPreorder',
             'local' => 'portfolio_id',
             'foreign' => 'preorder_id'));
    }
}