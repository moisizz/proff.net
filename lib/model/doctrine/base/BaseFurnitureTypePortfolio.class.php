<?php

/**
 * BaseFurnitureTypePortfolio
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $furniture_type_id
 * @property integer $portfolio_id
 * @property FurnitureType $FurnitureType
 * @property Portfolio $Portfolio
 * 
 * @method integer                getFurnitureTypeId()   Returns the current record's "furniture_type_id" value
 * @method integer                getPortfolioId()       Returns the current record's "portfolio_id" value
 * @method FurnitureType          getFurnitureType()     Returns the current record's "FurnitureType" value
 * @method Portfolio              getPortfolio()         Returns the current record's "Portfolio" value
 * @method FurnitureTypePortfolio setFurnitureTypeId()   Sets the current record's "furniture_type_id" value
 * @method FurnitureTypePortfolio setPortfolioId()       Sets the current record's "portfolio_id" value
 * @method FurnitureTypePortfolio setFurnitureType()     Sets the current record's "FurnitureType" value
 * @method FurnitureTypePortfolio setPortfolio()         Sets the current record's "Portfolio" value
 * 
 * @package    proff.dev
 * @subpackage model
 * @author     Лесникова Екатерина
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFurnitureTypePortfolio extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('furniture_type_portfolio');
        $this->hasColumn('furniture_type_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('portfolio_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('FurnitureType', array(
             'local' => 'furniture_type_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Portfolio', array(
             'local' => 'portfolio_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}